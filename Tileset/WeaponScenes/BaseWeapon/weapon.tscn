[gd_scene load_steps=3 format=3 uid="uid://dr42wcypjhkji"]

[ext_resource type="Texture2D" uid="uid://c7crbsoqg5vy5" path="res://heart.png" id="5_0hi1r"]

[sub_resource type="GDScript" id="GDScript_850l2"]
script/source = "extends Sprite2D

var Weapon_Stats: WeaponStats
# TODO: draw from weapon sts
var damage = 30
# if we want to get really advanced we could add an export list here
# which takes in the weapon effects as a list of scenes(?) and adds them as children
# of the cooldown component
# then we could use scene inheritence to add weapons very quickly

func _ready() -> void:
	#enemies = 
	#Weapon_Stats = find_child('WeaponStats')
	#Cooldown = find_child('Cooldown')
	
	#Cooldown.wait_time = Weapon_Stats.cooldown
	#Cooldown.start()
	pass # Replace with function body.

func set_start_offset(offset_by) -> void:
	rotate(deg_to_rad(offset_by))

func _physics_process(delta) -> void:
	#y = mx + b
	move_local_x(3)
	move_local_y(3)

func _on_timer_timeout() -> void:
	queue_free()

func _on_node_2d_body_entered(body: Node2D) -> void:
	if body.is_in_group(\"Enemy\"):
		body.process_hit(damage)

func _on_node_2d_body_exited(body: Node2D) -> void:
	if body.is_in_group(\"Enemy\"):
		body.reset()
"

[node name="Weapon" type="Sprite2D" groups=["Enemy"]]
script = SubResource("GDScript_850l2")

[node name="Heart" type="Sprite2D" parent="."]
texture = ExtResource("5_0hi1r")

[node name="Timer" type="Timer" parent="."]
wait_time = 5.0
one_shot = true
autostart = true

[node name="Area2D" type="Area2D" parent="."]

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="Area2D"]
polygon = PackedVector2Array(-2, -9, 0, -6, 3, -9, 7, -11, 11, -10, 12, -6, 12, -1, 0, 11, -12, -2, -12, -7, -8, -11, -3, -10)

[connection signal="timeout" from="Timer" to="." method="_on_timer_timeout"]
[connection signal="body_entered" from="Area2D" to="." method="_on_node_2d_body_entered"]
[connection signal="body_exited" from="Area2D" to="." method="_on_node_2d_body_exited"]
